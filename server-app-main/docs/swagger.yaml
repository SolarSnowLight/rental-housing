basePath: /
definitions:
  admin.CompanyModel:
    properties:
      description:
        type: string
      email_admin:
        type: string
      email_company:
        type: string
      link:
        type: string
      logo:
        type: string
      phone:
        type: string
      title:
        type: string
    required:
    - description
    - email_admin
    - email_company
    - link
    - logo
    - phone
    - title
    type: object
  admin.UserResponseModel:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  admin.UsersResponseModel:
    properties:
      users:
        items:
          $ref: '#/definitions/admin.UserResponseModel'
        type: array
    required:
    - users
    type: object
  company.CompanyDbModelEx:
    properties:
      created_at:
        type: string
      data:
        $ref: '#/definitions/company.CompanyModel'
      rules:
        items:
          type: string
        type: array
      uuid:
        type: string
    required:
    - created_at
    - data
    - rules
    - uuid
    type: object
  company.CompanyImageModel:
    properties:
      Filepath:
        type: string
      uuid:
        type: string
    required:
    - Filepath
    - uuid
    type: object
  company.CompanyModel:
    properties:
      description:
        type: string
      email_admin:
        type: string
      email_company:
        type: string
      link:
        type: string
      logo:
        type: string
      phone:
        type: string
      title:
        type: string
    required:
    - description
    - email_admin
    - email_company
    - link
    - logo
    - phone
    - title
    type: object
  company.CompanyUpdateModel:
    properties:
      description:
        type: string
      email_admin:
        type: string
      email_company:
        type: string
      link:
        type: string
      phone:
        type: string
      title:
        type: string
      uuid:
        type: string
    required:
    - description
    - email_company
    - link
    - phone
    - title
    - uuid
    type: object
  company.ManagerAnyCountModel:
    properties:
      count:
        type: integer
      managers:
        items:
          $ref: '#/definitions/company.ManagerDataEx'
        type: array
    required:
    - count
    - managers
    type: object
  company.ManagerCompanyModel:
    properties:
      projects:
        items:
          $ref: '#/definitions/company.ManagerProjectInfoModel'
        type: array
    required:
    - projects
    type: object
  company.ManagerCountModel:
    properties:
      count:
        type: integer
      limit:
        type: integer
      uuid:
        type: string
    required:
    - limit
    - uuid
    type: object
  company.ManagerDataEx:
    properties:
      createdAt:
        type: string
      data:
        $ref: '#/definitions/company.ManagerUserData'
      email:
        type: string
      uuid:
        type: string
    required:
    - createdAt
    - data
    - uuid
    type: object
  company.ManagerProjectInfoModel:
    properties:
      description:
        type: string
      logo:
        type: string
      title:
        type: string
      uuid:
        type: string
    required:
    - description
    - title
    - uuid
    type: object
  company.ManagerUserData:
    properties:
      avatar:
        type: string
      name:
        type: string
      nickname:
        type: string
      patronymic:
        type: string
      position:
        type: string
      surname:
        type: string
    type: object
  company.ManagerUuidModel:
    properties:
      company_uuid:
        type: string
      manager_uuid:
        type: string
    required:
    - company_uuid
    - manager_uuid
    type: object
  handler.BooleanResponse:
    properties:
      value:
        type: boolean
    type: object
  handler.LogoutOutputModel:
    properties:
      is_logout:
        type: boolean
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.successResponse:
    properties:
      message:
        type: string
    type: object
  project.ProjectAnyCountModel:
    properties:
      count:
        type: integer
      projects:
        items:
          $ref: '#/definitions/project.ProjectDbDataEx'
        type: array
    required:
    - count
    - projects
    type: object
  project.ProjectCountModel:
    properties:
      count:
        type: integer
      limit:
        type: integer
      uuid:
        type: string
    required:
    - limit
    - uuid
    type: object
  project.ProjectDataModel:
    properties:
      description:
        type: string
      logo:
        type: string
      managers:
        items:
          $ref: '#/definitions/project.UserEmailModel'
        type: array
      title:
        type: string
    required:
    - description
    - managers
    - title
    type: object
  project.ProjectDbDataEx:
    properties:
      created_at:
        type: string
      data:
        $ref: '#/definitions/project.ProjectDataModel'
      uuid:
        type: string
    type: object
  project.ProjectImageModel:
    properties:
      filepath:
        type: string
      uuid:
        type: string
    required:
    - filepath
    - uuid
    type: object
  project.ProjectModel:
    properties:
      description:
        type: string
      logo:
        type: string
      managers:
        items:
          $ref: '#/definitions/project.UserEmailModel'
        type: array
      title:
        type: string
      uuid:
        type: string
    required:
    - description
    - managers
    - title
    - uuid
    type: object
  project.ProjectUpdateModel:
    properties:
      description:
        type: string
      managers:
        items:
          $ref: '#/definitions/project.UserEmailModel'
        type: array
      title:
        type: string
      uuid:
        type: string
    required:
    - description
    - managers
    - title
    - uuid
    type: object
  project.ProjectUuidModel:
    properties:
      uuid:
        type: string
    required:
    - uuid
    type: object
  project.UserEmailModel:
    properties:
      email:
        type: string
    type: object
  user.GoogleOAuth2Code:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  user.ResetPasswordModel:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  user.TokenAccessModel:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  user.UserEmailModel:
    properties:
      email:
        type: string
    type: object
  user.UserJSONBModel:
    properties:
      avatar:
        type: string
      name:
        type: string
      nickname:
        type: string
      patronymic:
        type: string
      position:
        type: string
      surname:
        type: string
    required:
    - name
    - nickname
    - surname
    type: object
  user.UserLoginModel:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.UserProfileDataModel:
    properties:
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
      nickname:
        type: string
      patronymic:
        type: string
      position:
        type: string
      surname:
        type: string
    required:
    - name
    - nickname
    - surname
    type: object
  user.UserProfileUpdateDataModel:
    properties:
      name:
        type: string
      nickname:
        type: string
      password:
        type: string
      patronymic:
        type: string
      position:
        type: string
      surname:
        type: string
    required:
    - name
    - nickname
    - surname
    type: object
  user.UserRegisterModel:
    properties:
      data:
        $ref: '#/definitions/user.UserJSONBModel'
      email:
        type: string
      password:
        type: string
    required:
    - data
    - email
    - password
    type: object
host: localhost:5000
info:
  contact: {}
  title: Rental Housing
  version: "1.0"
paths:
  /admin/company/create:
    post:
      consumes:
      - application/json
      description: Создание новой компании (доступно только администратору)
      operationId: admin-company-create
      parameters:
      - description: Токен доступа для текущего пользователя
        example: Bearer access_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Логотип компании
        in: formData
        name: logo
        required: true
        type: string
      - description: Название компании
        in: formData
        name: title
        required: true
        type: string
      - description: Описание компании
        in: formData
        name: description
        required: true
        type: string
      - description: Адрес электронной почты компании
        in: formData
        name: email_company
        required: true
        type: string
      - description: 'Адрес электронной почты главного администратора '
        in: formData
        name: email_admin
        required: true
        type: string
      - description: Номер телефона компании
        in: formData
        name: phone
        required: true
        type: string
      - description: Ссылка на сайт компании
        in: formData
        name: link
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/admin.CompanyModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: CreateCompany
      tags:
      - admin
  /admin/user/get/all:
    post:
      consumes:
      - application/json
      description: Получение списка всех пользователей находящихся в системе
      operationId: admin-user-get-all
      parameters:
      - description: Токен доступа для текущего пользователя
        example: Bearer access_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/admin.UsersResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetAllUsers
      tags:
      - admin
  /auth/activate:
    get:
      consumes:
      - application/json
      description: Активация аккаунта по почте
      operationId: auth-activate
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/handler.LogoutOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Activate
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Выход из аккаунта
      operationId: auth-logout
      parameters:
      - description: Токен доступа для текущего пользователя
        example: Bearer access_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/handler.LogoutOutputModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Logout
      tags:
      - auth
  /auth/recovery/password:
    post:
      consumes:
      - application/json
      description: Запрос на смену пароля пользователем
      operationId: auth-recovery-password
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserEmailModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/handler.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Recovery password
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Обновление токена доступа и токена обновления
      operationId: auth-refresh
      parameters:
      - description: Токен доступа для текущего пользователя
        example: Bearer access_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.TokenAccessModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: refresh
      tags:
      - auth
  /auth/reset/password:
    post:
      consumes:
      - application/json
      description: Изменение пароля пользователем
      operationId: auth-reset-password
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.ResetPasswordModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/handler.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Reset password
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя
      operationId: auth-sign-in
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.TokenAccessModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-in/oauth2:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя через Google OAuth2
      operationId: auth-sign-in-oauth2
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.GoogleOAuth2Code'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.TokenAccessModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignInOAuth2
      tags:
      - auth
  /auth/sign-in/vk:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя через VK
      operationId: auth-sign-in-vk
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.TokenAccessModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignInVK
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя
      operationId: auth-sign-up
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserRegisterModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.TokenAccessModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
  /auth/sign-up/upload/image:
    post:
      consumes:
      - application/json
      description: Загрузка пользовательского изображения (аватар)
      operationId: auth-sign-up-upload-image
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserRegisterModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.TokenAccessModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: UploadProfileImage
      tags:
      - auth
  /company/manager/get:
    post:
      consumes:
      - application/json
      description: Получение информации о менеджере
      operationId: company-get-manager
      parameters:
      - description: Токен доступа для текущего пользователя
        example: Bearer access_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/company.ManagerUuidModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/company.ManagerCompanyModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: Get manager
      tags:
      - company
  /company/manager/get/all:
    post:
      consumes:
      - application/json
      description: Получение среза из общего числа менеджеров компании
      operationId: company-manager-get-all
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/company.ManagerCountModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/company.ManagerAnyCountModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetManagers
      tags:
      - company
  /company/project/create:
    post:
      consumes:
      - application/json
      description: Создание нового проекта в компании
      operationId: company-project-create
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/project.ProjectModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/project.ProjectModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: CreateProject
      tags:
      - project
  /company/project/get:
    post:
      consumes:
      - application/json
      description: Получение информации о конкретном проекте
      operationId: company-project-get
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/project.ProjectUuidModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/project.ProjectDbDataEx'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetProject
      tags:
      - project
  /company/project/get/all:
    post:
      consumes:
      - application/json
      description: Получение среза из общего числа проектов компании
      operationId: company-project-get-all
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/project.ProjectCountModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/project.ProjectAnyCountModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetProjects
      tags:
      - project
  /company/project/update:
    post:
      consumes:
      - application/json
      description: Обновление информации о проекте в компании
      operationId: project-update
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/project.ProjectUpdateModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: ProjectUpdate
      tags:
      - project
  /company/project/update/image:
    post:
      consumes:
      - application/json
      description: Добавление нового логотипа проекта
      operationId: company-project-add-logo
      parameters:
      - description: logo
        in: query
        name: logo
        required: true
        type: string
      - description: uuid
        in: query
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/project.ProjectImageModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: ProjectUpdateImage
      tags:
      - project
  /company/update:
    post:
      consumes:
      - application/json
      description: Создание новой компании (доступно только администратору)
      operationId: company-update
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/company.CompanyUpdateModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: UpdateCompany
      tags:
      - company
  /user/access/check:
    post:
      consumes:
      - application/json
      description: Проверка пользовательских прав на подключение к тому или иному
        административному модулю
      operationId: user-check-access
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/handler.BooleanResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: CheckAccess
      tags:
      - profile
  /user/company/get:
    post:
      consumes:
      - application/json
      description: Получение информации о всех ролях пользователя
      operationId: user-role-get-all
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/company.CompanyDbModelEx'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetUserRoles
      tags:
      - profile
  /user/profile/get:
    post:
      consumes:
      - application/json
      description: Получение информации о профиле
      operationId: user-profile-get
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserProfileDataModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.UserProfileDataModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetProfile
      tags:
      - profile
  /user/profile/update:
    post:
      consumes:
      - application/json
      description: Обновление информации о пользователе
      operationId: user-profile-update
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/user.UserProfileUpdateDataModel'
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            $ref: '#/definitions/user.UserJSONBModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: UpdateProfile
      tags:
      - profile
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
